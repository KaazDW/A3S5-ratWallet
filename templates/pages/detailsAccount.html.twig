{% extends 'base.html.twig' %}
{% block stylesheets %}
	<link rel="stylesheet" href="{{ asset('assets/css/pages/dashboard.css') }}">
{% endblock %}

{% block body %}
	<section class="dashboard">
		<div class="top-dash-content">
			<div class="element stats">
				<div>
					<p>Account name :
						<span>{{account.nameAccount }}</span>
					</p>
					<br>
					<p>Solde :
						<span>{{account.balance }}€</span>
					</p>
				</div>
				<div>
					<p class="tooltip-container" data-tooltip="The sold goal you want to reach on this account">Goal :
						<span>{{ totalGoal }}€</span>
					</p>
				<br>
				<p>Solde :
					<span>{{account.balance }}€</span>
				</p>
				</div>
				<div>
					<p class="tooltip-container" data-tooltip="Total of all Incoming Money since creation of this account">Total Income :
						<span>{{ totalIncomeAmount }}€</span>
					</p>
					<br>
					<p class="tooltip-container" data-tooltip="Total of all Expense Money since creation of this account">Total Expense :
						<span>{{ totalExpenseAmount }}€</span>
					</p>
				</div>
			</div>
			<div class="element transactions">
				<button>
					<i class="bi bi-plus-square-fill" id="addIncome"></i>
				</button>
				<button>
					<i class="bi bi-dash-square-fill" id="addExpense"></i>
				</button>
				<div class="toastForm element" id="incomeForm">
					<div>
						{{ form_start(incomeForm, {'attr': {'class': 'income-form', 'id': 'incomeFormId'} } ) }}
						<h3>Add a Money <span>Income</span></h3>
						{{ form_row(incomeForm.amount) }}
						{{ form_row(incomeForm.date) }}
						{{ form_row(incomeForm.description) }}
						{{ form_row(incomeForm.category) }}
						<div class="btn-div">
							<a href="#" id="linkFormIncome" class="button button--pan">
								<span>
									Add<i class="bi bi-plus-circle-fill"></i>
								</span>
							</a>
						</div>
						{{ form_end(incomeForm) }}
					</div>
				</div>
				<div class="toastForm element" id="expenseForm">
					<div>
						{{ form_start(expenseForm, {'attr': {'class': 'expense-form', 'id': 'incomeFormId'} } ) }}
						<h3>Add a Money <span>Expense</span></h3>
						{{ form_row(expenseForm.amount) }}
						{{ form_row(expenseForm.date) }}
						{{ form_row(expenseForm.description) }}
						{{ form_row(expenseForm.category) }}
						<div class="btn-div">
							<a href="#" id="linkFormExpense" class="button button--pan">
								<span>
									Add<i class="bi bi-plus-circle-fill"></i>
								</span>
							</a>
						</div>
						{{ form_end(expenseForm) }}
					</div>
				</div>
			</div>
		</div>
	</div>
					
	<div class="element">

	</div>

	<section class="dashboard">
		<div class="charts">
			<!-- <canvas id="myChart" class="linearChart element"></canvas>
			<canvas id="myPieChart" class="pieChart"></canvas> -->
			<div id="chart"></div>

		</div>
	</section>
</section>
{% endblock %}
{% block javascripts %}
	<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

    <script>
        let incomeFormElement;
        let expenseFormElement;
        let incomeButton, expenseButton;

        document.addEventListener('DOMContentLoaded', function () {
			incomeFormElement = document.getElementById('incomeForm');
			expenseFormElement = document.getElementById('expenseForm');
			incomeButton = document.getElementById('addIncome');
			expenseButton = document.getElementById('addExpense');

			// Make the <a> link can be use like a <button type="submit"> for income an expense forms
			var formulaire = document.getElementById('incomeFormId');
			var link = document.getElementById('linkFormIncome');

			link.addEventListener('click', function (event) {
				event.preventDefault();
				formulaire.submit();
			});
        });

        function sleep(ms) {
        	return new Promise(resolve => setTimeout(resolve, ms));
        }

        document.addEventListener('click', function (event) {
			if (event.target == incomeButton) {
				incomeFormElement.style.display = 'block';
				expenseFormElement.style.display = 'none';

				// Mettre à jour l'URL
				const newUrl = window.location.href.split('?')[0] + '?type=income';
				history.pushState({}, '', newUrl);
				return;
			}
			if (event.target == expenseButton) {
				incomeFormElement.style.display = 'none';
				expenseFormElement.style.display = 'block';
				
				// Mettre à jour l'URL
				const newUrl = window.location.href.split('?')[0] + '?type=expense';
				history.pushState({}, '', newUrl);
				return;
			}
			if (incomeFormElement.contains(event.target) || expenseFormElement.contains(event.target)) {
				return;
			}
			incomeFormElement.style.display = 'none';
			expenseFormElement.style.display = 'none';
        });



		document.addEventListener('DOMContentLoaded', function () {
			fetch("{{ path('datacategory') }}")
				.then(response => response.json())
				.then(data => {
					if (data && data.series && data.series.length > 0 && data.categories && data.categories.length > 0) {
						var options = {
							chart: {
								type: 'bar'
							},
							series: data.series,
							xaxis: {
								categories: data.categories
							}
						};

						var chart = new ApexCharts(document.querySelector('#chart'), options);
						chart.render();
					} else {
						console.error('Les données du graphique sont incorrectes.');
					}
				})
				.catch(error => {
					console.error('Erreur lors de la récupération des données du graphique:', error);
				});
		});

	</script>
{% endblock %}
