{% extends 'base.html.twig' %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('assets/css/pages/dashboard.css') }}">
{% endblock %}

{% block body %}
    <section class="dashboard">
        <div class="element">
            <p>dashboard</p>
        </div>
        <div class="element">
            <p>Top 3 des comptes les plus riches :</p>
            <ul>
                {% for topAccount in topAccounts %}
                    <li>{{ topAccount.userID.username }} -> {{ topAccount.nameAccount }} : {{ topAccount.balance }} €</li>
                {% endfor %}
            </ul>
        </div>
        <div class="element">
            {% if app.user.getNbAccount() is defined %}
                {% set nbAccountsCount = app.user.getNbAccount() %}
                {% if nbAccountsCount == 1 %}
                    <p>{{ app.user.username }} vous possédez 1 compte. Voici l'historique de votre solde :</p>
                    <canvas id="myChart2"></canvas>
                {% elseif nbAccountsCount >= 3 %}
                    <p>{{ app.user.username }} vous possédez {{ nbAccountsCount }} comptes. Voici l'historique du solde pour chacun de vos comptes :</p>
                    <canvas id="myChart2"></canvas>
                {% else %}
                    <p>{{ app.user.username }} vous ne possédez aucun compte.</p>
                {% endif %}
            {% endif %}
        </div>
        <div id="chart"></div>

    </section>
{% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // ...

        document.addEventListener('DOMContentLoaded', function () {
            // Remplacez "{{ path('dataaccounts') }}" par le chemin approprié dans votre application
            fetch("{{ path('dataaccounts') }}")
                .then(response => response.json())
                .then(data => {
                    if (data && data.length > 0) {
                        var options = {
                            chart: {
                                type: 'line'
                            },
                            series: data.map(accountData => ({
                                name: accountData.accountName,
                                data: accountData.amountHistory  // Correction ici
                            })),
                            xaxis: {
                                categories: data[0].amountHistory.map((_, index) => index + 1)
                            }
                        };

                        var chart = new ApexCharts(document.querySelector('#chart'), options);
                        chart.render();
                    } else {
                        console.error('Les données de l\'historique sont incorrectes.');
                    }
                })
                .catch(error => {
                    console.error('Erreur lors de la récupération des données de l\'historique:', error);
                });
        });


    </script>

{% endblock %}
